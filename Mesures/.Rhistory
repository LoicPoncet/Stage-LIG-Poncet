library(ggplot2)
library(plyr)
library(reshape2)
setwd("~/Stage-LIG-Poncet/Mesures")
# extraction des données
data_para_naif <- data.frame(read.csv2(file="mesures_500_5000_1_para.csv",sep=';', dec='.'))
data_para_transposee <- data.frame(read.csv2("mesures_500_5000_1_para_transposee.csv",sep=';', dec='.'))
# analyse statistique
stat_naif<-ddply(data_para_naif,c("Taille_mat"),summarise,N=length(Time),mean=mean(Time),sd=sd(Time),se=1.96*(sd/sqrt(N)))
stat_transposee<-ddply(data_para_transposee,c("Taille_mat"),summarise,N=length(Time),mean=mean(Time),sd=sd(Time),se=1.96*(sd/sqrt(N)))
p <- ggplot()
p <- p + geom_point(data=stat_naif, aes(x=Taille_mat, y=mean), color='red') + geom_line(data=stat_naif, aes(x=Taille_mat, y=mean), color='red')
p <- p + geom_point(data=stat_transposee, aes(x=Taille_mat, y=mean), color='blue') + geom_line(data=stat_transposee, aes(x=Taille_mat, y=mean), color='blue')
p <- p + xlab("Taille des matrices")
p <- p + ylab("Temps de calcul (s)")
#p <- p + theme_dark()
p <-  p + theme(panel.background = element_rect(fill = "lightgrey"),
panel.grid.minor = element_line(colour = "black", linetype="dashed", size = 0.1),
panel.grid.major = element_line(colour = "black", size = 0.1))
# p <- p + theme(panel.grid.major = element_line(colour = "white"), panel.grid.minor = element_line(colour = "white"))
show(p)
p <- p + geom_errorbar(data=stat_naif,aes(x=Taille_mat,ymin=mean-se,ymax=mean+se))
show(p)
p <- p + geom_errorbar(data=stat_naif,aes(x=Taille_mat,ymin=mean-se,ymax=mean+se),width=.2)
p <- p + geom_point(data=stat_transposee, aes(x=Taille_mat, y=mean), color='blue') + geom_line(data=stat_transposee, aes(x=Taille_mat, y=mean), color='blue')
p <- p + xlab("Taille des matrices")
p <- p + ylab("Temps de calcul (s)")
#p <- p + theme_dark()
p <-  p + theme(panel.background = element_rect(fill = "lightgrey"),
panel.grid.minor = element_line(colour = "black", linetype="dashed", size = 0.1),
panel.grid.major = element_line(colour = "black", size = 0.1))
# p <- p + theme(panel.grid.major = element_line(colour = "white"), panel.grid.minor = element_line(colour = "white"))
show(p)
data_para_naif <- data.frame(read.csv2(file="mesures_500_5000_1_para.csv",sep=';', dec='.'))
data_para_transposee <- data.frame(read.csv2("mesures_500_5000_1_para_transposee.csv",sep=';', dec='.'))
# analyse statistique
stat_naif<-ddply(data_para_naif,c("Taille_mat"),summarise,N=length(Time),mean=mean(Time),sd=sd(Time),se=1.96*(sd/sqrt(N)))
stat_transposee<-ddply(data_para_transposee,c("Taille_mat"),summarise,N=length(Time),mean=mean(Time),sd=sd(Time),se=1.96*(sd/sqrt(N)))
p <- ggplot()
p <- p + geom_point(data=stat_naif, aes(x=Taille_mat, y=mean), color='red') + geom_line(data=stat_naif, aes(x=Taille_mat, y=mean), color='red')
p <- p + geom_errorbar(data=stat_naif,aes(x=Taille_mat,ymin=mean-se,ymax=mean+se),width=.2,position=position_dodge(.9))
p <- p + geom_point(data=stat_transposee, aes(x=Taille_mat, y=mean), color='blue') + geom_line(data=stat_transposee, aes(x=Taille_mat, y=mean), color='blue')
p <- p + xlab("Taille des matrices")
p <- p + ylab("Temps de calcul (s)")
#p <- p + theme_dark()
p <-  p + theme(panel.background = element_rect(fill = "lightgrey"),
panel.grid.minor = element_line(colour = "black", linetype="dashed", size = 0.1),
panel.grid.major = element_line(colour = "black", size = 0.1))
# p <- p + theme(panel.grid.major = element_line(colour = "white"), panel.grid.minor = element_line(colour = "white"))
show(p)
p <- p + geom_errorbar(data=stat_naif,aes(x=Taille_mat,ymin=mean-se,ymax=mean+se),width=.2,position=position_dodge(1.2))
p <- p + geom_point(data=stat_transposee, aes(x=Taille_mat, y=mean), color='blue') + geom_line(data=stat_transposee, aes(x=Taille_mat, y=mean), color='blue')
p <- p + xlab("Taille des matrices")
p <- p + ylab("Temps de calcul (s)")
#p <- p + theme_dark()
p <-  p + theme(panel.background = element_rect(fill = "lightgrey"),
panel.grid.minor = element_line(colour = "black", linetype="dashed", size = 0.1),
panel.grid.major = element_line(colour = "black", size = 0.1))
# p <- p + theme(panel.grid.major = element_line(colour = "white"), panel.grid.minor = element_line(colour = "white"))
show(p)
p <- p + geom_point(data=stat_naif, aes(x=Taille_mat, y=mean), color='red') + geom_line(data=stat_naif, aes(x=Taille_mat, y=mean), color='red')
p <- p + geom_errorbar(data=stat_naif,aes(x=Taille_mat,ymin=mean-se,ymax=mean+se),width=.2,position=position_dodge(2))
p <- p + geom_point(data=stat_transposee, aes(x=Taille_mat, y=mean), color='blue') + geom_line(data=stat_transposee, aes(x=Taille_mat, y=mean), color='blue')
p <- p + xlab("Taille des matrices")
p <- p + ylab("Temps de calcul (s)")
#p <- p + theme_dark()
p <-  p + theme(panel.background = element_rect(fill = "lightgrey"),
panel.grid.minor = element_line(colour = "black", linetype="dashed", size = 0.1),
panel.grid.major = element_line(colour = "black", size = 0.1))
# p <- p + theme(panel.grid.major = element_line(colour = "white"), panel.grid.minor = element_line(colour = "white"))
show(p)
p <- ggplot()
p <- p + geom_point(data=stat_naif, aes(x=Taille_mat, y=mean), color='red') + geom_line(data=stat_naif, aes(x=Taille_mat, y=mean), color='red')
p <- p + geom_errorbar(data=stat_naif,aes(x=Taille_mat,ymin=mean-se,ymax=mean+se),width=.2,position=position_dodge())
p <- p + geom_point(data=stat_transposee, aes(x=Taille_mat, y=mean), color='blue') + geom_line(data=stat_transposee, aes(x=Taille_mat, y=mean), color='blue')
p <- p + xlab("Taille des matrices")
p <- p + ylab("Temps de calcul (s)")
#p <- p + theme_dark()
p <-  p + theme(panel.background = element_rect(fill = "lightgrey"),
panel.grid.minor = element_line(colour = "black", linetype="dashed", size = 0.1),
panel.grid.major = element_line(colour = "black", size = 0.1))
# p <- p + theme(panel.grid.major = element_line(colour = "white"), panel.grid.minor = element_line(colour = "white"))
show(p)
# extraction des données
data_para_naif <- data.frame(read.csv2(file="mesures_500_5000_1_para.csv",sep=';', dec='.'))
data_para_transposee <- data.frame(read.csv2("mesures_500_5000_1_para_transposee.csv",sep=';', dec='.'))
# analyse statistique
stat_naif<-ddply(data_para_naif,c("Taille_mat"),summarise,N=length(Time),mean=mean(Time),sd=sd(Time),se=1.96*(sd/sqrt(N)))
stat_transposee<-ddply(data_para_transposee,c("Taille_mat"),summarise,N=length(Time),mean=mean(Time),sd=sd(Time),se=1.96*(sd/sqrt(N)))
p <- ggplot()
p <- p + geom_point(data=stat_naif, aes(x=Taille_mat, y=mean), color='red') + geom_line(data=stat_naif, aes(x=Taille_mat, y=mean), color='red')
p <- p + geom_errorbar(data=stat_naif,aes(x=Taille_mat,ymin=mean-se,ymax=mean+se),width=.2,position=position_dodge())
p <- p + geom_point(data=stat_transposee, aes(x=Taille_mat, y=mean), color='blue') + geom_line(data=stat_transposee, aes(x=Taille_mat, y=mean), color='blue')
p <- p + geom_errorbar(data=stat_transposee,aes(x=Taille_mat,ymin=mean-se,ymax=mean+se),width=.2,position=position_dodge())
p <- p + xlab("Taille des matrices")
p <- p + ylab("Temps de calcul (s)")
#p <- p + theme_dark()
p <-  p + theme(panel.background = element_rect(fill = "lightgrey"),
panel.grid.minor = element_line(colour = "black", linetype="dashed", size = 0.1),
panel.grid.major = element_line(colour = "black", size = 0.1))
# p <- p + theme(panel.grid.major = element_line(colour = "white"), panel.grid.minor = element_line(colour = "white"))
show(p)
stat_naif<-ddply(data_para_naif,c("Taille_mat"),summarise,N=length(Time),mean=mean(Time),sd=sd(Time),se=1.96*(sd/sqrt(N)))
stat_transposee<-ddply(data_para_transposee,c("Taille_mat"),summarise,N=length(Time),mean=mean(Time),sd=sd(Time),se=10)
p <- ggplot()
p <- p + geom_point(data=stat_naif, aes(x=Taille_mat, y=mean), color='red') + geom_line(data=stat_naif, aes(x=Taille_mat, y=mean), color='red')
p <- p + geom_errorbar(data=stat_naif,aes(x=Taille_mat,ymin=mean-se,ymax=mean+se),width=.2,position=position_dodge())
p <- p + geom_point(data=stat_transposee, aes(x=Taille_mat, y=mean), color='blue') + geom_line(data=stat_transposee, aes(x=Taille_mat, y=mean), color='blue')
p <- p + geom_errorbar(data=stat_transposee,aes(x=Taille_mat,ymin=mean-se,ymax=mean+se),width=.2,position=position_dodge())
p <- p + xlab("Taille des matrices")
p <- p + ylab("Temps de calcul (s)")
#p <- p + theme_dark()
p <-  p + theme(panel.background = element_rect(fill = "lightgrey"),
panel.grid.minor = element_line(colour = "black", linetype="dashed", size = 0.1),
panel.grid.major = element_line(colour = "black", size = 0.1))
# p <- p + theme(panel.grid.major = element_line(colour = "white"), panel.grid.minor = element_line(colour = "white"))
show(p)
stat_naif<-ddply(data_para_naif,c("Taille_mat"),summarise,N=length(Time),mean=mean(Time),sd=sd(Time),se=1.96*(sd/sqrt(N)))
stat_transposee<-ddply(data_para_transposee,c("Taille_mat"),summarise,N=length(Time),mean=mean(Time),sd=sd(Time),se=1.96*(sd/sqrt(N)))
p <- ggplot()
p <- p + geom_point(data=stat_naif, aes(x=Taille_mat, y=mean), color='red') + geom_line(data=stat_naif, aes(x=Taille_mat, y=mean), color='red')
p <- p + geom_errorbar(data=stat_naif,aes(x=Taille_mat,ymin=mean-se,ymax=mean+se),width=.2,position=position_dodge())
p <- p + geom_point(data=stat_transposee, aes(x=Taille_mat, y=mean), color='blue') + geom_line(data=stat_transposee, aes(x=Taille_mat, y=mean), color='blue')
p <- p + geom_errorbar(data=stat_transposee,aes(x=Taille_mat,ymin=mean-se,ymax=mean+se),width=.2,position=position_dodge())
p <- p + xlab("Taille des matrices")
p <- p + ylab("Temps de calcul (s)")
#p <- p + theme_dark()
p <-  p + theme(panel.background = element_rect(fill = "lightgrey"),
panel.grid.minor = element_line(colour = "black", linetype="dashed", size = 0.1),
panel.grid.major = element_line(colour = "black", size = 0.1))
# p <- p + theme(panel.grid.major = element_line(colour = "white"), panel.grid.minor = element_line(colour = "white"))
show(p)
p <- ggplot()
p <- p + geom_point(data=stat_naif, aes(x=Taille_mat, y=mean), color='red') + geom_line(data=stat_naif, aes(x=Taille_mat, y=mean), color='red')
p <- p + geom_errorbar(data=stat_naif,aes(x=Taille_mat,ymin=mean-se,ymax=mean+se),width=.2,position=position_dodge())
p <- p + geom_point(data=stat_transposee, aes(x=Taille_mat, y=mean), color='blue') + geom_line(data=stat_transposee, aes(x=Taille_mat, y=mean), color='blue')
p <- p + geom_errorbar(data=stat_transposee,aes(x=Taille_mat,ymin=mean-se,ymax=mean+se),width=.2,position=position_dodge())
p <- p + xlab("Taille des matrices")
p <- p + ylab("Temps de calcul (s)")
p <- p + scale_fill_continuous(guide = "legend")
p <-  p + theme(panel.background = element_rect(fill = "lightgrey"),
panel.grid.minor = element_line(colour = "black", linetype="dashed", size = 0.1),
panel.grid.major = element_line(colour = "black", size = 0.1))
show(p)
p <- ggplot()
p <- p + geom_point(data=stat_naif, aes(x=Taille_mat, y=mean), color='red') + geom_line(data=stat_naif, aes(x=Taille_mat, y=mean), color='red')
p <- p + geom_errorbar(data=stat_naif,aes(x=Taille_mat,ymin=mean-se,ymax=mean+se),width=.2,position=position_dodge())
p <- p + geom_point(data=stat_transposee, aes(x=Taille_mat, y=mean), color='blue') + geom_line(data=stat_transposee, aes(x=Taille_mat, y=mean), color='blue')
p <- p + geom_errorbar(data=stat_transposee,aes(x=Taille_mat,ymin=mean-se,ymax=mean+se),width=.2,position=position_dodge())
p <- p + xlab("Taille des matrices")
p <- p + ylab("Temps de calcul (s)")
p <-  p + theme(panel.background = element_rect(fill = "lightgrey"),
panel.grid.minor = element_line(colour = "black", linetype="dashed", size = 0.1),
panel.grid.major = element_line(colour = "black", size = 0.1))
p <- p + scale_fill_continuous(guide = "legend")
show(p)
p <- ggplot()
p <- p + geom_point(data=stat_naif, aes(x=Taille_mat, y=mean), color='red') + geom_line(data=stat_naif, aes(x=Taille_mat, y=mean), color='red')
p <- p + geom_errorbar(data=stat_naif,aes(x=Taille_mat,ymin=mean-se,ymax=mean+se),width=.2,position=position_dodge())
p <- p + geom_point(data=stat_transposee, aes(x=Taille_mat, y=mean), color='blue') + geom_line(data=stat_transposee, aes(x=Taille_mat, y=mean), color='blue')
p <- p + geom_errorbar(data=stat_transposee,aes(x=Taille_mat,ymin=mean-se,ymax=mean+se),width=.2,position=position_dodge())
p <- p + xlab("Taille des matrices")
p <- p + ylab("Temps de calcul (s)")
p <-  p + theme(panel.background = element_rect(fill = "lightgrey"),
panel.grid.minor = element_line(colour = "black", linetype="dashed", size = 0.1),
panel.grid.major = element_line(colour = "black", size = 0.1))
scale_colour_manual("",
breaks = c("algorithme classique", "algorithme transposée"),
values = c("red", "blue"))
show(p)
p <- ggplot()
p <- p + geom_point(data=stat_naif, aes(x=Taille_mat, y=mean), color='red') + geom_line(data=stat_naif, aes(x=Taille_mat, y=mean), color='red')
p <- p + geom_errorbar(data=stat_naif,aes(x=Taille_mat,ymin=mean-se,ymax=mean+se),width=.2,position=position_dodge())
p <- p + geom_point(data=stat_transposee, aes(x=Taille_mat, y=mean), color='blue') + geom_line(data=stat_transposee, aes(x=Taille_mat, y=mean), color='blue')
p <- p + geom_errorbar(data=stat_transposee,aes(x=Taille_mat,ymin=mean-se,ymax=mean+se),width=.2,position=position_dodge())
p <- p + xlab("Taille des matrices")
p <- p + ylab("Temps de calcul (s)")
p <-  p + theme(panel.background = element_rect(fill = "lightgrey"),
panel.grid.minor = element_line(colour = "black", linetype="dashed", size = 0.1),
panel.grid.major = element_line(colour = "black", size = 0.1))
scale_colour_manual("",
values=c("algorithme classique"="red", "algorithme transposée"="blue"))
show(p)
p <- ggplot()
p <- p + geom_point(data=stat_naif, aes(x=Taille_mat, y=mean), color='red') + geom_line(data=stat_naif, aes(x=Taille_mat, y=mean), color='red')
p <- p + geom_errorbar(data=stat_naif,aes(x=Taille_mat,ymin=mean-se,ymax=mean+se),width=.2,position=position_dodge())
p <- p + geom_point(data=stat_transposee, aes(x=Taille_mat, y=mean), color='blue') + geom_line(data=stat_transposee, aes(x=Taille_mat, y=mean), color='blue')
p <- p + geom_errorbar(data=stat_transposee,aes(x=Taille_mat,ymin=mean-se,ymax=mean+se),width=.2,position=position_dodge())
p <- p + xlab("Taille des matrices")
p <- p + ylab("Temps de calcul (s)")
scale_colour_manual("",
values=c("algorithme classique"="red", "algorithme transposée"="blue"))
p <-  p + theme(panel.background = element_rect(fill = "lightgrey"),
panel.grid.minor = element_line(colour = "black", linetype="dashed", size = 0.1),
panel.grid.major = element_line(colour = "black", size = 0.1),
legend.position="topleft")
show(p)
p <- ggplot()
p <- p + geom_point(data=stat_naif, aes(x=Taille_mat, y=mean), color='red') + geom_line(data=stat_naif, aes(x=Taille_mat, y=mean), color='red')
p <- p + geom_errorbar(data=stat_naif,aes(x=Taille_mat,ymin=mean-se,ymax=mean+se),width=.2,position=position_dodge())
p <- p + geom_point(data=stat_transposee, aes(x=Taille_mat, y=mean), color='blue') + geom_line(data=stat_transposee, aes(x=Taille_mat, y=mean), color='blue')
p <- p + geom_errorbar(data=stat_transposee,aes(x=Taille_mat,ymin=mean-se,ymax=mean+se),width=.2,position=position_dodge())
p <- p + xlab("Taille des matrices")
p <- p + ylab("Temps de calcul (s)")
scale_colour_manual("",
values=c(algorithme classique="red", algorithme transposée="blue"))
p <-  p + theme(panel.background = element_rect(fill = "lightgrey"),
panel.grid.minor = element_line(colour = "black", linetype="dashed", size = 0.1),
panel.grid.major = element_line(colour = "black", size = 0.1),
legend.position="topleft")
show(p)
p <- ggplot()
p <- p + geom_point(data=stat_naif, aes(x=Taille_mat, y=mean), color='red') + geom_line(data=stat_naif, aes(x=Taille_mat, y=mean), color='red')
p <- p + geom_errorbar(data=stat_naif,aes(x=Taille_mat,ymin=mean-se,ymax=mean+se),width=.2,position=position_dodge())
p <- p + geom_point(data=stat_transposee, aes(x=Taille_mat, y=mean), color='blue') + geom_line(data=stat_transposee, aes(x=Taille_mat, y=mean), color='blue')
p <- p + geom_errorbar(data=stat_transposee,aes(x=Taille_mat,ymin=mean-se,ymax=mean+se),width=.2,position=position_dodge())
p <- p + xlab("Taille des matrices")
p <- p + ylab("Temps de calcul (s)")
p <- p + scale_colour_manual(values=c("red", "blue"))
p <-  p + theme(panel.background = element_rect(fill = "lightgrey"),
panel.grid.minor = element_line(colour = "black", linetype="dashed", size = 0.1),
panel.grid.major = element_line(colour = "black", size = 0.1),
legend.position="topleft")
show(p)
p <- ggplot()
p <- p + geom_point(data=stat_naif, aes(x=Taille_mat, y=mean), color='red') + geom_line(data=stat_naif, aes(x=Taille_mat, y=mean), color='red')
p <- p + geom_errorbar(data=stat_naif,aes(x=Taille_mat,ymin=mean-se,ymax=mean+se),width=.2,position=position_dodge())
p <- p + geom_point(data=stat_transposee, aes(x=Taille_mat, y=mean), color='blue') + geom_line(data=stat_transposee, aes(x=Taille_mat, y=mean), color='blue')
p <- p + geom_errorbar(data=stat_transposee,aes(x=Taille_mat,ymin=mean-se,ymax=mean+se),width=.2,position=position_dodge())
p <- p + xlab("Taille des matrices")
p <- p + ylab("Temps de calcul (s)")
p <- p + scale_colour_manual("",
breaks = c("Algo", "truc"),
values = c("red", "green"))
p <-  p + theme(panel.background = element_rect(fill = "lightgrey"),
panel.grid.minor = element_line(colour = "black", linetype="dashed", size = 0.1),
panel.grid.major = element_line(colour = "black", size = 0.1),
legend.position="topleft")
show(p)
p <- ggplot()
p <- p + geom_point(data=stat_naif, aes(x=Taille_mat, y=mean), color='red') + geom_line(data=stat_naif, aes(x=Taille_mat, y=mean), color='red')
p <- p + geom_errorbar(data=stat_naif,aes(x=Taille_mat,ymin=mean-se,ymax=mean+se),width=.2,position=position_dodge())
p <- p + geom_point(data=stat_transposee, aes(x=Taille_mat, y=mean), color='blue') + geom_line(data=stat_transposee, aes(x=Taille_mat, y=mean), color='blue')
p <- p + geom_errorbar(data=stat_transposee,aes(x=Taille_mat,ymin=mean-se,ymax=mean+se),width=.2,position=position_dodge())
p <- p + xlab("Taille des matrices")
p <- p + ylab("Temps de calcul (s)")
p <- p + scale_colour_manual("",
breaks = c("Algo", "truc"),
values = c("red", "green"))
p <-  p + theme(panel.background = element_rect(fill = "lightgrey"),
panel.grid.minor = element_line(colour = "black", linetype="dashed", size = 0.1),
panel.grid.major = element_line(colour = "black", size = 0.1))
show(p)
p <- ggplot()
p <- p + geom_point(data=stat_naif, aes(x=Taille_mat, y=mean), color='red') + geom_line(data=stat_naif, aes(x=Taille_mat, y=mean), color='red')
p <- p + geom_errorbar(data=stat_naif,aes(x=Taille_mat,ymin=mean-se,ymax=mean+se),width=.2,position=position_dodge())
p <- p + geom_point(data=stat_transposee, aes(x=Taille_mat, y=mean), color='blue') + geom_line(data=stat_transposee, aes(x=Taille_mat, y=mean), color='blue')
p <- p + geom_errorbar(data=stat_transposee,aes(x=Taille_mat,ymin=mean-se,ymax=mean+se),width=.2,position=position_dodge())
p <- p + xlab("Taille des matrices")
p <- p + ylab("Temps de calcul (s)")
p <-  p + theme(panel.background = element_rect(fill = "lightgrey"),
panel.grid.minor = element_line(colour = "black", linetype="dashed", size = 0.1),
panel.grid.major = element_line(colour = "black", size = 0.1))
p <- p + scale_colour_manual("",
breaks = c("Algo", "truc"),
values = c("red", "green"))
show(p)
p <- ggplot()
p <- p + geom_point(data=stat_naif, aes(x=Taille_mat, y=mean), color='red') + geom_line(data=stat_naif, aes(x=Taille_mat, y=mean), color='red')
p <- p + geom_errorbar(data=stat_naif,aes(x=Taille_mat,ymin=mean-se,ymax=mean+se),width=.2,position=position_dodge())
p <- p + geom_point(data=stat_transposee, aes(x=Taille_mat, y=mean), color='blue') + geom_line(data=stat_transposee, aes(x=Taille_mat, y=mean), color='blue')
p <- p + geom_errorbar(data=stat_transposee,aes(x=Taille_mat,ymin=mean-se,ymax=mean+se),width=.2,position=position_dodge())
p <- p + xlab("Taille des matrices")
p <- p + ylab("Temps de calcul (s)")
p <- p + scale_colour_manual("",
values = c("TempMedia"="green", "TempMax"="red"))
p <-  p + theme(panel.background = element_rect(fill = "lightgrey"),
panel.grid.minor = element_line(colour = "black", linetype="dashed", size = 0.1),
panel.grid.major = element_line(colour = "black", size = 0.1))
show(p)
p <- p + ylab("Temps de calcul (s)")
p <- p + scale_colour_manual("",
values = c("TempMedia"="green", "TempMax"="red"))
p <- ggplot()
p <- p + geom_point(data=stat_naif, aes(x=Taille_mat, y=mean, colour = "red"), color='red') + geom_line(data=stat_naif, aes(x=Taille_mat, y=mean, colour = "red"), color='red')
p <- p + geom_errorbar(data=stat_naif,aes(x=Taille_mat,ymin=mean-se,ymax=mean+se),width=.2,position=position_dodge())
p <- p + geom_point(data=stat_transposee, aes(x=Taille_mat, y=mean, colour = "blue"), color='blue') + geom_line(data=stat_transposee, aes(x=Taille_mat, y=mean, colour = "blue"), color='blue')
p <- p + geom_errorbar(data=stat_transposee,aes(x=Taille_mat,ymin=mean-se,ymax=mean+se),width=.2,position=position_dodge())
p <- p + xlab("Taille des matrices")
p <- p + ylab("Temps de calcul (s)")
p <- p + scale_colour_manual("",
values = c("TempMedia"="red", "TempMax"="blue"))
p <-  p + theme(panel.background = element_rect(fill = "lightgrey"),
panel.grid.minor = element_line(colour = "black", linetype="dashed", size = 0.1),
panel.grid.major = element_line(colour = "black", size = 0.1))
show(p)
library(reshape2)
setwd("~/Stage-LIG-Poncet/Mesures")
# extraction des données
data_para_naif <- data.frame(read.csv2(file="mesures_500_5000_1_para.csv",sep=';', dec='.'))
data_para_transposee <- data.frame(read.csv2("mesures_500_5000_1_para_transposee.csv",sep=';', dec='.'))
# analyse statistique
stat_naif<-ddply(data_para_naif,c("Taille_mat"),summarise,N=length(Time),mean=mean(Time),sd=sd(Time),se=1.96*(sd/sqrt(N)))
stat_transposee<-ddply(data_para_transposee,c("Taille_mat"),summarise,N=length(Time),mean=mean(Time),sd=sd(Time),se=1.96*(sd/sqrt(N)))
# tracé des résultats obtenus
p <- ggplot()
p <- p + geom_point(data=stat_naif, aes(x=Taille_mat, y=mean, colour = "red")) + geom_line(data=stat_naif, aes(x=Taille_mat, y=mean, colour = "red"))
p <- p + geom_errorbar(data=stat_naif,aes(x=Taille_mat,ymin=mean-se,ymax=mean+se),width=.2,position=position_dodge())
p <- p + geom_point(data=stat_transposee, aes(x=Taille_mat, y=mean, colour = "blue")) + geom_line(data=stat_transposee, aes(x=Taille_mat, y=mean, colour = "blue"))
p <- p + geom_errorbar(data=stat_transposee,aes(x=Taille_mat,ymin=mean-se,ymax=mean+se),width=.2,position=position_dodge())
p <- p + xlab("Taille des matrices")
p <- p + ylab("Temps de calcul (s)")
p <- p + scale_colour_manual("",
values = c("TempMedia"="red", "TempMax"="blue"))
p <-  p + theme(panel.background = element_rect(fill = "lightgrey"),
panel.grid.minor = element_line(colour = "black", linetype="dashed", size = 0.1),
panel.grid.major = element_line(colour = "black", size = 0.1))
show(p)
p <- ggplot()
p <- p + geom_point(data=stat_naif, aes(x=Taille_mat, y=mean, colour = "red")) + geom_line(data=stat_naif, aes(x=Taille_mat, y=mean, colour = "red"))
p <- p + geom_errorbar(data=stat_naif,aes(x=Taille_mat,ymin=mean-se,ymax=mean+se),width=.2,position=position_dodge())
p <- p + geom_point(data=stat_transposee, aes(x=Taille_mat, y=mean, colour = "blue")) + geom_line(data=stat_transposee, aes(x=Taille_mat, y=mean, colour = "blue"))
p <- p + geom_errorbar(data=stat_transposee,aes(x=Taille_mat,ymin=mean-se,ymax=mean+se),width=.2,position=position_dodge())
p <- p + xlab("Taille des matrices")
p <- p + ylab("Temps de calcul (s)")
p <- p + scale_colour_manual("",
values = c("TempMedia", "TempMax"))
p <-  p + theme(panel.background = element_rect(fill = "lightgrey"),
panel.grid.minor = element_line(colour = "black", linetype="dashed", size = 0.1),
panel.grid.major = element_line(colour = "black", size = 0.1))
show(p)
p <- ggplot()
p <- p + geom_point(data=stat_naif, aes(x=Taille_mat, y=mean, colour = "red")) + geom_line(data=stat_naif, aes(x=Taille_mat, y=mean, colour = "red"))
p <- p + geom_errorbar(data=stat_naif,aes(x=Taille_mat,ymin=mean-se,ymax=mean+se),width=.2,position=position_dodge())
p <- p + geom_point(data=stat_transposee, aes(x=Taille_mat, y=mean, colour = "blue")) + geom_line(data=stat_transposee, aes(x=Taille_mat, y=mean, colour = "blue"))
p <- p + geom_errorbar(data=stat_transposee,aes(x=Taille_mat,ymin=mean-se,ymax=mean+se),width=.2,position=position_dodge())
p <- p + xlab("Taille des matrices")
p <- p + ylab("Temps de calcul (s)")
p <- p + scale_colour_manual("",
values = c("red", "blue"))
p <-  p + theme(panel.background = element_rect(fill = "lightgrey"),
panel.grid.minor = element_line(colour = "black", linetype="dashed", size = 0.1),
panel.grid.major = element_line(colour = "black", size = 0.1))
show(p)
cols <- c("algorithme naïf"="red","algorithme transposée"="blue")
p <- ggplot()
p <- p + geom_point(data=stat_naif, aes(x=Taille_mat, y=mean, colour = "algorithme naïf")) + geom_line(data=stat_naif, aes(x=Taille_mat, y=mean, colour = "algorithme naïf"))
p <- p + geom_errorbar(data=stat_naif,aes(x=Taille_mat,ymin=mean-se,ymax=mean+se),width=.2,position=position_dodge())
p <- p + geom_point(data=stat_transposee, aes(x=Taille_mat, y=mean, colour = "algorithme transposée")) + geom_line(data=stat_transposee, aes(x=Taille_mat, y=mean, colour = "algorithme transposée"))
p <- p + geom_errorbar(data=stat_transposee,aes(x=Taille_mat,ymin=mean-se,ymax=mean+se),width=.2,position=position_dodge())
p <- p + xlab("Taille des matrices")
p <- p + ylab("Temps de calcul (s)")
p <- p + scale_colour_manual("",
values = cols)
p <-  p + theme(panel.background = element_rect(fill = "lightgrey"),
panel.grid.minor = element_line(colour = "black", linetype="dashed", size = 0.1),
panel.grid.major = element_line(colour = "black", size = 0.1))
show(p)
cols <- c("algorithme naïf"="red","algorithme transposée"="blue")
p <- ggplot()
p <- p + geom_point(data=stat_naif, aes(x=Taille_mat, y=mean, colour = "algorithme naïf")) + geom_line(data=stat_naif, aes(x=Taille_mat, y=mean, colour = "algorithme naïf"))
p <- p + geom_errorbar(data=stat_naif,aes(x=Taille_mat,ymin=mean-se,ymax=mean+se),width=.2,position=position_dodge())
p <- p + geom_point(data=stat_transposee, aes(x=Taille_mat, y=mean, colour = "algorithme transposée")) + geom_line(data=stat_transposee, aes(x=Taille_mat, y=mean, colour = "algorithme transposée"))
p <- p + geom_errorbar(data=stat_transposee,aes(x=Taille_mat,ymin=mean-se,ymax=mean+se),width=.2,position=position_dodge())
p <- p + xlab("Taille des matrices")
p <- p + ylab("Temps de calcul (s)")
p <- p + scale_colour_manual("",
values = cols)
p <-  p + theme(panel.background = element_rect(fill = "lightgrey"),
panel.grid.minor = element_line(colour = "black", linetype="dashed", size = 0.1),
panel.grid.major = element_line(colour = "black", size = 0.1),
legend.position="bottom")
show(p)
cols <- c("algorithme naïf"="red","algorithme transposée"="blue")
p <- ggplot()
p <- p + geom_point(data=stat_naif, aes(x=Taille_mat, y=mean, colour = "algorithme naïf")) + geom_line(data=stat_naif, aes(x=Taille_mat, y=mean, colour = "algorithme naïf"))
p <- p + geom_errorbar(data=stat_naif,aes(x=Taille_mat,ymin=mean-se,ymax=mean+se),width=.2,position=position_dodge())
p <- p + geom_point(data=stat_transposee, aes(x=Taille_mat, y=mean, colour = "algorithme transposée")) + geom_line(data=stat_transposee, aes(x=Taille_mat, y=mean, colour = "algorithme transposée"))
p <- p + geom_errorbar(data=stat_transposee,aes(x=Taille_mat,ymin=mean-se,ymax=mean+se),width=.2,position=position_dodge())
p <- p + xlab("Taille des matrices")
p <- p + ylab("Temps de calcul (s)")
p <- p + scale_colour_manual("",
values = cols)
p <-  p + theme(panel.background = element_rect(fill = "lightgrey"),
panel.grid.minor = element_line(colour = "black", linetype="dashed", size = 0.1),
panel.grid.major = element_line(colour = "black", size = 0.1),
legend.position="topleft")
show(p)
cols <- c("algorithme naïf"="red","algorithme transposée"="blue")
p <- ggplot()
p <- p + geom_point(data=stat_naif, aes(x=Taille_mat, y=mean, colour = "algorithme naïf")) + geom_line(data=stat_naif, aes(x=Taille_mat, y=mean, colour = "algorithme naïf"))
p <- p + geom_errorbar(data=stat_naif,aes(x=Taille_mat,ymin=mean-se,ymax=mean+se),width=.2,position=position_dodge())
p <- p + geom_point(data=stat_transposee, aes(x=Taille_mat, y=mean, colour = "algorithme transposée")) + geom_line(data=stat_transposee, aes(x=Taille_mat, y=mean, colour = "algorithme transposée"))
p <- p + geom_errorbar(data=stat_transposee,aes(x=Taille_mat,ymin=mean-se,ymax=mean+se),width=.2,position=position_dodge())
p <- p + xlab("Taille des matrices")
p <- p + ylab("Temps de calcul (s)")
p <- p + scale_colour_manual("",
values = cols)
p <-  p + theme(panel.background = element_rect(fill = "lightgrey"),
panel.grid.minor = element_line(colour = "black", linetype="dashed", size = 0.1),
panel.grid.major = element_line(colour = "black", size = 0.1),
legend.position="top")
show(p)
cols <- c("algorithme naïf"="red","algorithme transposée"="blue")
p <- ggplot()
p <- p + geom_point(data=stat_naif, aes(x=Taille_mat, y=mean, colour = "algorithme naïf")) + geom_line(data=stat_naif, aes(x=Taille_mat, y=mean, colour = "algorithme naïf"))
p <- p + geom_errorbar(data=stat_naif,aes(x=Taille_mat,ymin=mean-se,ymax=mean+se),width=.2,position=position_dodge())
p <- p + geom_point(data=stat_transposee, aes(x=Taille_mat, y=mean, colour = "algorithme transposée")) + geom_line(data=stat_transposee, aes(x=Taille_mat, y=mean, colour = "algorithme transposée"))
p <- p + geom_errorbar(data=stat_transposee,aes(x=Taille_mat,ymin=mean-se,ymax=mean+se),width=.2,position=position_dodge())
p <- p + xlab("Taille des matrices")
p <- p + ylab("Temps de calcul (s)")
p <- p + scale_colour_manual("",
values = cols)
p <-  p + theme(panel.background = element_rect(fill = "lightgrey"),
panel.grid.minor = element_line(colour = "black", linetype="dashed", size = 0.1),
panel.grid.major = element_line(colour = "black", size = 0.1),
legend.position="bottom")
show(p)
View(stat_naif)
View(stat_transposee)
